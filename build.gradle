// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
    id 'com.google.dagger.hilt.android' version '2.41' apply false
}

ext {
    minSdkVersion = 21
    targetSdkVerson = 31
    compileSdkVersion = 31

    hiltVersion = '2.38.1'
    hiltKaptVersion = '2.38.1'

    roomVersion = '2.4.2'

    retrofitVersion = '2.9.0'

    gsonVersion = '2.8.7'

    coroutinesVersion = '1.5.1'

    rxjavaVersion = '2.2.21'
    rxandroidVersion = '2.1.1'
    rxkotlinVersion = '2.3.0'

    architectureComponentVersion = '2.3.1'

    hiltDependency = "com.google.dagger:hilt-android:$hiltVersion"
    hiltKaptDependency = "com.google.dagger:hilt-android-compiler:$hiltKaptVersion"

    roomDep = "androidx.room:room-runtime:$roomVersion"
    roomCompilerKapt = "androidx.room:room-compiler:$roomVersion"

    retrofitDep = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    gsonConverterDep = "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    gsonDep = "com.google.code.gson:gson:$gsonVersion"

    coroutinesDep = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    coroutinesAndroidDep = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    rxJavaDep = "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    rxAndroidDep = "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    rxKotlinDep = "io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion"

    lifecycleVmDep = "androidx.lifecycle:lifecycle-viewmodel-ktx:$architectureComponentVersion"
    lifecycleLiveDataDep = "androidx.lifecycle:lifecycle-livedata-ktx:$architectureComponentVersion"
    lifecycleRuntimeDep = "androidx.lifecycle:lifecycle-runtime-ktx:$architectureComponentVersion"
    lifecycleKapt = "androidx.lifecycle:lifecycle-compiler:$architectureComponentVersion"

}

task clean(type: Delete) {
    delete rootProject.buildDir
}